using Content.Client.UserInterface.Controls;
using Content.Shared._AS.TaskList;
using Content.Shared._AS.TaskList.Prototypes;
using Content.Shared.Cargo;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._AS.TaskList.UI;

[GenerateTypedNameReferences]
public sealed partial class TaskConsoleMenu : FancyWindow
{
    public Action<string>? OnCompleteButtonPressed;
    public Action? NewTaskRequested;

    public TaskConsoleMenu()
    {
        RobustXamlLoader.Load(this);
        NewTaskButton.OnPressed += OnNewTaskButtonPressed;
    }

    private void OnNewTaskButtonPressed(BaseButton.ButtonEventArgs obj)
    {
        NewTaskRequested?.Invoke();
    }

    public void UpdateEntries(List<TaskData> tasks)
    {
        TaskContainer.Children.Clear();
        foreach (var t in tasks)
        {
            var entry = new TaskEntry(t);
            entry.OnCompleteButtonPressed += () => OnCompleteButtonPressed?.Invoke(t.Id);
            TaskContainer.AddChild(entry);
        }
        TaskContainer.AddChild(new Control
        {
            MinHeight = 10
        });
    }
}
