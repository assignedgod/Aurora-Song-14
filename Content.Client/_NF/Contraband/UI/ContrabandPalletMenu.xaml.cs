using Content.Client.UserInterface.Controls;
using Content.Shared._NF.Bank;
using Content.Shared._NF.Contraband.Components;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._NF.Contraband.UI;

[GenerateTypedNameReferences]
public sealed partial class ContrabandPalletMenu : FancyWindow
{
    public Action? SellRequested;
    public Action? AppraiseRequested;
    public Action? RegisterRequested; // Aurora

    private string _locPrefix = string.Empty;

    public ContrabandPalletMenu()
    {
        RobustXamlLoader.Load(this);
        SellButton.OnPressed += OnSellPressed;
        AppraiseButton.OnPressed += OnAppraisePressed;
        RegisterButton.OnPressed += OnRegisterPressed; // Aurora
    }

    public void SetWindowText(string locPrefix)
    {
        _locPrefix = locPrefix ?? string.Empty;

        Title = Loc.GetString($"{_locPrefix}contraband-pallet-console-menu-title");

        if (!string.IsNullOrEmpty(_locPrefix))
        {
            AppraisalLabelLeft.Text = Loc.GetString($"{_locPrefix}contraband-pallet-menu-appraisal-label");
            AppraisalLabel.Text = Loc.GetString($"{_locPrefix}contraband-pallet-menu-no-goods-text");
            CountLabelLeft.Text = Loc.GetString($"{_locPrefix}contraband-pallet-menu-count-label");
            CountLabel.Text = Loc.GetString($"{_locPrefix}contraband-pallet-menu-no-goods-text");
            AppraiseButton.Text = Loc.GetString($"{_locPrefix}contraband-pallet-appraise-button");
            SellButton.Text = Loc.GetString($"{_locPrefix}contraband-pallet-sell-button");
            // Begin Aurora - Add Register
            RegisterLabelLeft.Text = Loc.GetString($"{_locPrefix}contraband-pallet-unregistered-count-label");
            RegisterLabel.Text = Loc.GetString($"{_locPrefix}contraband-pallet-no-unregistered-label");
            RegisterButton.Text = Loc.GetString($"{_locPrefix}contraband-pallet-register-button");
            RegisterDisclaimer.Text = Loc.GetString($"{_locPrefix}contraband-pallet-register-disclaimer");
            SellDisclaimer.Text = Loc.GetString($"{_locPrefix}contraband-pallet-sell-disclaimer");
            // End Aurora
        }
    }

    public void SetAppraisal(int amount)
    {
        // TODO: switch currency function by currency in component
        AppraisalLabel.Text = Loc.GetString($"{_locPrefix}contraband-console-menu-points-amount", ("amount", BankSystemExtensions.ToIndependentString(amount)));
    }

    public void SetCount(int count)
    {
        CountLabel.Text = count.ToString();
    }

    // Aurora
    public void SetUnregistered(int unregistered)
    {
        RegisterLabel.Text = unregistered.ToString();
    }

    public void SetEnabled(bool enabled)
    {
        AppraiseButton.Disabled = !enabled;
        SellButton.Disabled = !enabled;
        RegisterButton.Disabled = !enabled; // Aurora
    }

    private void OnSellPressed(BaseButton.ButtonEventArgs obj)
    {
        SellRequested?.Invoke();
    }

    private void OnAppraisePressed(BaseButton.ButtonEventArgs obj)
    {
        AppraiseRequested?.Invoke();
    }

    // Aurora
    private void OnRegisterPressed(BaseButton.ButtonEventArgs obj)
    {
        RegisterRequested?.Invoke();
    }
}
